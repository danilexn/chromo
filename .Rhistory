runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='danilexn',
token='FFB527CA2B7E2C3A74657170AC5892E1',
secret='GQqa3Azr3RKEg4U6JFxFwbPLO1PuM0XGdQFxZvqc')
library(rsconnect)
rsconnect::deployApp('Tronos-Shiny')
runApp("Tronos-Shiny",host="0.0.0.0")
library(shiny)
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
library(shiny)
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
runApp("Tronos-Shiny",host="0.0.0.0")
styler:::style_selection()
shiny::runApp('Tronos-Shiny/Reformatted')
runApp('Tronos-Shiny/Reformatted')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
library(shiny)
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
library(shiny)
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
runApp('Tronos-Shiny')
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library(shiny)
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library("shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library("shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
?write.csv
?write.csv
runApp("Tronos-Shiny")
library("shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
runApp("Tronos-Shiny")
library("shiny")
library(profvis)
profvis({runApp("Tronos-Shiny")})
library(shiny)
setwd("~/tronos-shiny")
runApp("app")
find.pc.causality <- function(X) {
stuffStat <- list(C = cor(as.matrix(X)), n = nrow(as.matrix(X)))
pc.fit <- pc(stuffStat, indepTest = gaussCItest, p = ncol(as.matrix(X)), alpha = 0.01)
as(pc.fit, "matrix")
}
find.vlgc.causality <- function(X) {
out <- multipleVLGrangerFunc(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
find.vlte.causality <- function(X) {
out <- multipleVLTransferEntropy(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
coords <- c("x", "y")
morph <- c("convexity", "circularity", "major", "minor", "area")
signal <- c()
df_filter <- afa.example.2[,c("particle", "label", morph, signal, "cal.speed", "ang.speed")]
segments.motifs.list <- df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ find.vlte.causality(.))
funs_causality <- c(find.pc.causality, find.vlgc.causality, find.vlte.causality)
segments.motifs.list <- list()
for (i in 1:length(funs_causality)) {
segments.motifs.list <- c(segments.motifs.list,
df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ funs_causality[[i]](.))
)
}
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(afa.example.matrix)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
find.pc.causality <- function(X) {
stuffStat <- list(C = cor(as.matrix(X)), n = nrow(as.matrix(X)))
pc.fit <- pc(stuffStat, indepTest = gaussCItest, p = ncol(as.matrix(X)), alpha = 0.01)
as(pc.fit, "matrix")
}
find.vlgc.causality <- function(X) {
out <- multipleVLGrangerFunc(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
find.vlte.causality <- function(X) {
out <- multipleVLTransferEntropy(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
coords <- c("x", "y")
morph <- c("convexity", "circularity", "major", "minor", "area")
signal <- c()
df_filter <- afa.example.2[,c("particle", "label", morph, signal, "cal.speed", "ang.speed")]
segments.motifs.list <- df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ find.vlte.causality(.))
funs_causality <- c(find.pc.causality, find.vlgc.causality, find.vlte.causality)
segments.motifs.list <- list()
for (i in 1:length(funs_causality)) {
segments.motifs.list <- c(segments.motifs.list,
df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ funs_causality[[i]](.))
)
}
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(afa.example.matrix)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
afa.example.2 <- read.csv("~/Tronos_data.csv")
View(afa.example.2)
find.pc.causality <- function(X) {
stuffStat <- list(C = cor(as.matrix(X)), n = nrow(as.matrix(X)))
pc.fit <- pc(stuffStat, indepTest = gaussCItest, p = ncol(as.matrix(X)), alpha = 0.01)
as(pc.fit, "matrix")
}
find.vlgc.causality <- function(X) {
out <- multipleVLGrangerFunc(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
find.vlte.causality <- function(X) {
out <- multipleVLTransferEntropy(as.matrix(X), maxLag = 10, autoLagflag = TRUE, alpha = 0.01)
out$adjMat
}
coords <- c("x", "y")
morph <- c("convexity", "circularity", "major", "minor", "area")
signal <- c()
df_filter <- afa.example.2[,c("particle", "label", morph, signal, "cal.speed", "ang.speed")]
segments.motifs.list <- df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ find.vlte.causality(.))
funs_causality <- c(find.pc.causality, find.vlgc.causality, find.vlte.causality)
segments.motifs.list <- list()
for (i in 1:length(funs_causality)) {
segments.motifs.list <- c(segments.motifs.list,
df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ funs_causality[[i]](.))
)
}
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(afa.example.matrix)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list[[1]]) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(df_filter)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list[[3]]) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(df_filter)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list[[2]]) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(df_filter)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
segments.motifs.list[[2]]
segments.motifs.list[2]
segments.motifs.list[1]
segments.motifs.list <- df_filter %>% filter(label == "AFA855") %>% dplyr::group_by(particle) %>% select(-label) %>%
group_map( ~ find.vlgc.causality(.))
segments.motifs.list
nparts <- nrow(df_filter %>% filter(label == "AFA855") %>% dplyr::select(particle) %>% distinct())
adj.mat <- round(Reduce('+', segments.motifs.list) / nparts, 2)
adj.mat <- apply(adj.mat, 1, function(x) ifelse(x >= 0.5, x, 0))
out.network <- as.network(adj.mat,mode="directed", weighted = T, ignore.eval = FALSE, names.eval = "weights", directed = T)
network.vertex.names(out.network) <- colnames(df_filter)
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05, edge.size = "weights", edge.label = "weights")
out.network
ggnet2(out.network, size = 12, label = TRUE, label.size = 5, arrow.size = 12, arrow.gap = 0.05)
length(out.network)
library(shiny)
setwd("~/tronos-shiny")
runApp("app")
library(shiny)
setwd("~/tronos-shiny")
runApp("app")
library(shiny)
setwd("~/tronos-shiny")
runApp("app")
